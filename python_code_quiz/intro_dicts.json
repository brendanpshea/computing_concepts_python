{
    "questions": [
        {
            "function_name": "create_pet_profile",
            "parameters": ["name", "species", "age"],
            "description": "Create and return a dictionary containing information about a pet.",
            "input_type": ["string", "string", "int"],
            "answer_code": "def create_pet_profile(name, species, age):\n    return {'name': name, 'species': species, 'age': age}",
            "hint": "Create a dictionary with three key-value pairs using curly braces.",
            "test_inputs": [
                ["Luna", "cat", 3],
                ["Max", "dog", 5],
                ["Bubbles", "fish", 1],
                ["Pip", "parrot", 2],
                ["Ziggy", "hamster", 1]
            ]
        },
        {
            "function_name": "get_favorite_color",
            "parameters": ["preferences", "person"],
            "description": "Return the favorite color of the person from the preferences dictionary.",
            "input_type": ["dict", "string"],
            "answer_code": "def get_favorite_color(preferences, person):\n    return preferences[person]",
            "hint": "Use square bracket notation to access dictionary values.",
            "test_inputs": [
                [{"Alice": "blue", "Bob": "red"}, "Alice"],
                [{"Charlie": "green", "Diana": "purple"}, "Diana"],
                [{"Eva": "yellow", "Frank": "orange"}, "Eva"],
                [{"Grace": "pink", "Henry": "brown"}, "Henry"],
                [{"Ivy": "white", "Jack": "black"}, "Jack"]
            ]
        },
        {
            "function_name": "update_score",
            "parameters": ["scores", "player", "points"],
            "description": "Add points to a player's score in the scores dictionary.",
            "input_type": ["dict", "string", "int"],
            "answer_code": "def update_score(scores, player, points):\n    scores[player] = scores[player] + points\n    return scores",
            "hint": "Use square bracket notation to modify dictionary values.",
            "test_inputs": [
                [{"Player1": 10, "Player2": 20}, "Player1", 5],
                [{"Mario": 100, "Luigi": 50}, "Luigi", 10],
                [{"Pac-Man": 200, "Ghost": 150}, "Pac-Man", 50],
                [{"Sonic": 300, "Tails": 250}, "Sonic", 100],
                [{"Kirby": 75, "Meta Knight": 80}, "Kirby", 25]
            ]
        },
        {
            "function_name": "check_key_exists",
            "parameters": ["dictionary", "key"],
            "description": "Return True if the key exists in the dictionary, False otherwise.",
            "input_type": ["dict", "string"],
            "answer_code": "def check_key_exists(dictionary, key):\n    return key in dictionary",
            "hint": "Use the 'in' operator to check if a key exists.",
            "test_inputs": [
                [{"apple": 1, "banana": 2}, "apple"],
                [{"cat": "meow", "dog": "woof"}, "fish"],
                [{"red": "#FF0000", "blue": "#0000FF"}, "green"],
                [{"name": "Alice", "age": 25}, "name"],
                [{}, "empty"]
            ]
        },
        {
            "function_name": "get_all_keys",
            "parameters": ["dictionary"],
            "description": "Return a list of all keys in the dictionary.",
            "input_type": "dict",
            "answer_code": "def get_all_keys(dictionary):\n    return list(dictionary.keys())",
            "hint": "Use the keys() method and convert to a list.",
            "test_inputs": [
                {"a": 1, "b": 2, "c": 3},
                {"name": "Bob", "age": 30},
                {"red": 255, "green": 128, "blue": 0},
                {"Monday": "sunny", "Tuesday": "rainy"},
                {}
            ]
        },
        {
            "function_name": "count_values",
            "parameters": ["dictionary"],
            "description": "Return the number of key-value pairs in the dictionary.",
            "input_type": "dict",
            "answer_code": "def count_values(dictionary):\n    return len(dictionary)",
            "hint": "Use the len() function on the dictionary.",
            "test_inputs": [
                {"a": 1, "b": 2},
                {"name": "Charlie"},
                {"x": 0, "y": 0, "z": 0},
                {},
                {"one": 1, "two": 2, "three": 3, "four": 4}
            ]
        },
        {
            "function_name": "get_safe_value",
            "parameters": ["dictionary", "key", "default"],
            "description": "Return the value for the key if it exists, otherwise return the default value.",
            "input_type": ["dict", "string", "string"],
            "answer_code": "def get_safe_value(dictionary, key, default):\n    return dictionary.get(key, default)",
            "hint": "Use the get() method with a default value.",
            "test_inputs": [
                [{"name": "Dave", "age": 25}, "name", "Unknown"],
                [{"color": "blue"}, "size", "Not specified"],
                [{}, "type", "None"],
                [{"fruit": "apple"}, "vegetable", "carrot"],
                [{"day": "Monday"}, "month", "January"]
            ]
        },
        {
            "function_name": "merge_dictionaries",
            "parameters": ["dict1", "dict2"],
            "description": "Combine two dictionaries into a new dictionary.",
            "input_type": ["dict", "dict"],
            "answer_code": "def merge_dictionaries(dict1, dict2):\n    new_dict = dict1.copy()\n    new_dict.update(dict2)\n    return new_dict",
            "hint": "Copy the first dictionary and update it with the second.",
            "test_inputs": [
                [{"a": 1}, {"b": 2}],
                [{"name": "Eve"}, {"age": 28}],
                [{"x": 10}, {}],
                [{}, {"y": 20}],
                [{"color": "red"}, {"size": "large"}]
            ]
        },
        {
            "function_name": "sum_values",
            "parameters": ["dictionary"],
            "description": "Return the sum of all values in the dictionary (assuming all values are numbers).",
            "input_type": "dict",
            "answer_code": "def sum_values(dictionary):\n    return sum(dictionary.values())",
            "hint": "Use the values() method with the sum() function.",
            "test_inputs": [
                {"a": 1, "b": 2, "c": 3},
                {"score1": 10, "score2": 20},
                {"x": 5},
                {"val1": 100, "val2": 200, "val3": 300},
                {}
            ]
        },
        {
            "function_name": "print_key_value_pairs",
            "parameters": ["dictionary"],
            "description": "Return a list of strings where each string is 'key: value'.",
            "input_type": "dict",
            "answer_code": "def print_key_value_pairs(dictionary):\n    return [f'{key}: {value}' for key, value in dictionary.items()]",
            "hint": "Use items() method and list comprehension with f-strings.",
            "test_inputs": [
                {"name": "Frank", "age": 30},
                {"color": "green", "size": "medium"},
                {"temperature": 72, "humidity": 65},
                {"day": "Wednesday"},
                {}
            ]
        }
    ]
}
